================================================================================
                                 HOW TO BUILD
================================================================================
This section provides the build steps for UEFI/IHV SCT2, Shell2 on one X64/IA32 
Desktop/Laptop pre-installed with Windows 7 and VS2008. The current EMS build need 
pre-installed VS2005.

1. Prepare the build environment
   1) Download the UDK2014(UDK2014.Complete.MyWorkSpace.zip) from the link and extract it
      http://sourceforge.net/apps/mediawiki/tianocore/index.php?title=UDK2014#UDK2014
   2) Extract UDK2014.MyWorkSpace.zip to C:\MyWorkSpace
   3) Extract BaseTools(Windows).zip to C:\MyWorkSpace
   4) Extract SctPkg.zip to C:\MyWorkSpace
   5) Copy C:\MyWorkSpace\SctPkg\Tools\Bin\GenBin.exe C:\MyWorkSpace\BaseTools\Bin\Win32\


2. Build Instructions for UEFI SCTII X64
   1) Open the Visual Studio 2008 Command Prompt
   2) Execute "edksetup.bat"
   3) Execute "build -p SctPkg\UEFI\UEFI_SCT.dsc -a X64 -t VS2008x86"
   4) Execute "cd c:\MyWorkSpace\Build\UefiSct\DEBUG_VS2008x86"
   5) Execute "..\..\..\SctPkg\CommonGenFramework.bat uefi_sct X64 InstallX64.efi"
   6) The target subdirectory named as SctPackageX64 which includes test cases and 
      UEFI SCT II applications will be generated and located at 
      C:\MyWorkSpace\Build\UefiSct\DEBUG_VS2008x86

Notice: The example shows the build process of X64 only. For other architecture, 
        please change the keyword, X64, in build step to IA32.

3. Build Instructions for IHV SCT II X64
   1) Open the Visual Studio 2008 Command Prompt
   2) Execute "edksetup.bat"
   3) Execute "build -p SctPkg\UEFI\IHV_SCT.dsc -a X64 -t VS2008x86"
   4) Execute "cd C:\MyWorkSpace\Build\IhvSct\DEBUG_VS2008x86"
   5) Execute "..\..\..\SctPkg\CommonGenFramework.bat ihv_sct X64 InstallX64.efi"
   6) The target subdirectory named as SctPackageX64 which includes test cases and 
      IHV SCT II applications will be generated and located at 
      C:\MyWorkSpace\Build\IhvSct\DEBUG_VS2008x86

Notice: The example shows the build process of X64 only. For other architecture, 
        please change the keyword, X64, in build step to IA32.


4. Build UEFI Shell
   1) Please replace the 4 files before the build. The new files are provided in 
      "ShellPkg Patch.zip"
      a) ShellPkg\Application\Shell\Shell.c
      b) ShellPkg\Application\Shell\ShellProtocol.c
      c) ShellPkg\Application\Shell\ShellProtocol.h
      d) ShellPkg\Application\Shell\ConsoleLogger.c
   2) Execute "edksetup.bat"
   3) Execute "build -p ShellPkg\ShellPkg.dsc -a X64 -t VS2008x86" or 
      "build -p ShellPkg\ShellPkg.dsc -a IA32 -t VS2008x86"
   4) The shell.efi will be generated and located at 
      C:WorkSpace\Build\Shell\DEBUG_VS2008x86\X64 or C:WorkSpace\Build\Shell\DEBUG_VS2008x86\IA32
     
Build EMS :
  Extract Ems-Dev.zip to certain dir, for example, extract to c:\UefiSct, 
  after this step, a subdirectory named as Ems is generated.
  Default Ems packages use ActiveTcl8.4.19.5-threaded, Winpcap4.1.3, WpdPack3.0 
  and co-released libnet for building. 
  
  1. Setup Build Environment
     1) Install Microsoft Windows 7 and VS2005 in build machine.
     2) Download ActiveTCL8.4.19.5 and install it into C:\Tcl
     3) Copy all *.lib from C:\Tcl\Lib to C:\UefiSct\Ems\Lib\Tcl\Lib 
     4) Copy C:\Tcl\Include folder to C:\UefiSct\Ems\Lib\Tcl
     5) Download the WinPcap_4_1_3.exe and install it to system
     6) Download the 3.0-WpdPack.zip and extract it to C:\WpdPack
     7) Copy C:\WpdPack\Include folder into C:\UefiSct\Ems\Lib\WpdPack
     8) Copy C:\WpdPack\Lib folder into C:\UefiSct\Ems\Lib\WpdPack

  2. Build Step
     1) Run Visual Studio 2005 Command Prompt to go to the command line environment. 
     2) Execute follow commands in turn. 
         a) cd C:\UefiSct\Ems\src
         b) set ems_dir=C:\UefiSct\Ems
         c) nmake
     3) an Ems.exe executable file will be generated under the bin directory.

  Notice:
  1. When running UEFI SCT remote validation, user needs to keep the test topology 
     environment clean. Users could use one network cable to connect the EFI target 
     machine and management host machine directly.
  2. If you want to run UEFI SCT with local execution usage, you need to make 
     sure the "\Sct\.passive.mode" file is removed.
  3. The passive mode of the UEFI SCT depends on network stacks.




